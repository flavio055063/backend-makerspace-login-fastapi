"""refazendo banco de dados por completo

Revision ID: e6178c104b21
Revises: 
Create Date: 2023-11-10 13:42:46.721636

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e6178c104b21'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('area',
    sa.Column('area_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('area_id')
    )
    op.create_table('customer',
    sa.Column('customer_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('customer_name', sa.String(), nullable=False),
    sa.Column('cpf', sa.String(), nullable=False),
    sa.Column('rua', sa.String(), nullable=False),
    sa.Column('bairro', sa.String(), nullable=False),
    sa.Column('cidade', sa.String(), nullable=False),
    sa.Column('estado', sa.String(), nullable=False),
    sa.Column('cep', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('customer_id'),
    sa.UniqueConstraint('cpf')
    )
    op.create_index(op.f('ix_customer_email'), 'customer', ['email'], unique=True)
    op.create_table('materials',
    sa.Column('material_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('material_name', sa.String(), nullable=False),
    sa.Column('available_quantity', sa.Integer(), nullable=False),
    sa.Column('measurement_unit', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('material_id')
    )
    op.create_index(op.f('ix_materials_material_id'), 'materials', ['material_id'], unique=False)
    op.create_table('budget',
    sa.Column('budget_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('serviceDescription', sa.String(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('isApproved', sa.Boolean(), nullable=True),
    sa.Column('paymentStatus', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('budget_solicitated_date', sa.DateTime(), nullable=True),
    sa.Column('service_payment_date', sa.Date(), nullable=True),
    sa.Column('service_start_date', sa.Date(), nullable=True),
    sa.Column('service_end_date', sa.Date(), nullable=True),
    sa.Column('delivery_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.customer_id'], ),
    sa.PrimaryKeyConstraint('budget_id')
    )
    op.create_index(op.f('ix_budget_budget_id'), 'budget', ['budget_id'], unique=False)
    op.create_table('maker_member',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('matricula', sa.String(), nullable=False),
    sa.Column('cellphone_number', sa.String(), nullable=False),
    sa.Column('id_area', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_capitain', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['id_area'], ['area.area_id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_maker_member_user_id'), 'maker_member', ['user_id'], unique=False)
    op.create_table('consumes',
    sa.Column('consumes_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('budget_id', sa.Integer(), nullable=True),
    sa.Column('material_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['budget_id'], ['budget.budget_id'], ),
    sa.ForeignKeyConstraint(['material_id'], ['materials.material_id'], ),
    sa.PrimaryKeyConstraint('consumes_id')
    )
    op.create_index(op.f('ix_consumes_consumes_id'), 'consumes', ['consumes_id'], unique=False)
    op.create_table('lasercut_budget',
    sa.Column('lasercut_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('budget_id', sa.Integer(), nullable=True),
    sa.Column('operation_type', sa.String(), nullable=True),
    sa.Column('scale', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['budget_id'], ['budget.budget_id'], ),
    sa.PrimaryKeyConstraint('lasercut_id')
    )
    op.create_table('print3d_budget',
    sa.Column('print3d_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('budget_id', sa.Integer(), nullable=True),
    sa.Column('plastic_color', sa.String(), nullable=True),
    sa.Column('layer_height', sa.Float(), nullable=True),
    sa.Column('use_support', sa.Boolean(), nullable=True),
    sa.Column('scale', sa.Float(), nullable=True),
    sa.Column('infill_percent', sa.Integer(), nullable=True),
    sa.Column('other_params', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['budget_id'], ['budget.budget_id'], ),
    sa.PrimaryKeyConstraint('print3d_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('print3d_budget')
    op.drop_table('lasercut_budget')
    op.drop_index(op.f('ix_consumes_consumes_id'), table_name='consumes')
    op.drop_table('consumes')
    op.drop_index(op.f('ix_maker_member_user_id'), table_name='maker_member')
    op.drop_table('maker_member')
    op.drop_index(op.f('ix_budget_budget_id'), table_name='budget')
    op.drop_table('budget')
    op.drop_index(op.f('ix_materials_material_id'), table_name='materials')
    op.drop_table('materials')
    op.drop_index(op.f('ix_customer_email'), table_name='customer')
    op.drop_table('customer')
    op.drop_table('area')
    # ### end Alembic commands ###
